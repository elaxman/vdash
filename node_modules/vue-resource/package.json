{
  "name": "vue-resource",
  "version": "0.1.17",
  "description": "A web request service for Vue.js",
  "main": "src/index.js",
  "scripts": {
    "build": "webpack --config build/webpack.build.config.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/vue-resource.git"
  },
  "keywords": [
    "vue",
    "vuejs",
    "resource",
    "mvvm"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/vuejs/vue-resource/issues"
  },
  "homepage": "https://github.com/vuejs/vue-resource#readme",
  "devDependencies": {
    "webpack": "^1.12.3"
  },
  "readme": "# vue-resource [![npm package](https://img.shields.io/npm/v/vue-resource.svg)](https://www.npmjs.com/package/vue-resource)\n\nResource plugin for Vue.js.\n\nThe plugin provides services for making web requests and handle responses using a XMLHttpRequest or JSONP.\n\n## Setup\n\n### Webpack/Browserify\n\nAdd `vue` and `vue-resource` to your `package.json`, then `npm install`, then add these lines in your code:\n\n```javascript\nvar Vue = require('vue');\n\nVue.use(require('vue-resource'));\n```\n\n### Configuration\n\nSet default values using the global configuration.\n\n```javascript\nVue.http.options.root = '/root';\nVue.http.headers.common['Authorization'] = 'Basic YXBpOnBhc3N3b3Jk';\n```\n\nSet default values inside your Vue component options.\n\n```javascript\nnew Vue({\n\n    http: {\n      root: '/root',\n      headers: {\n        Authorization: 'Basic YXBpOnBhc3N3b3Jk'\n      }\n    }\n\n})\n```\n\n## HTTP\n\nThe http service can be used globally `Vue.http` or in a Vue instance `this.$http`.\n\n### Methods\n\n* `get(url, [data], [success], [options])`\n* `post(url, [data], [success], [options])`\n* `put(url, [data], [success], [options])`\n* `patch(url, [data], [success], [options])`\n* `delete(url, [data], [success], [options])`\n* `jsonp(url, [data], [success], [options])`\n\n### Options\n\n* **url** - `string` - URL to which the request is sent\n* **data** - `Object|string` - Data to be sent as the request message data\n* **method** - `string` - HTTP method (e.g. GET, POST, ...)\n* **params** - `Object` - Parameters object to be appended as GET parameters\n* **headers** - `Object` - Headers object to be sent as HTTP request headers\n* **success** - `function(data, status, request)` - Callback function to be called when the request finishes\n* **error** - `function(data, status, request)` - Callback function to be called when the request fails\n* **beforeSend** - `function(request, options)` - Callback function to modify the request object before it is sent\n* **emulateHTTP** - `boolean` - Send PUT, PATCH and DELETE requests with a HTTP POST and set the `X-HTTP-Method-Override` header\n* **emulateJSON** - `boolean` -  Send request data as `application/x-www-form-urlencoded` content type\n* **xhr** - `Object` - Parameters object to be set on the native XHR object\n* **jsonp** - `string` - Callback function name in a JSONP request\n\n### Example\n\n```javascript\nnew Vue({\n\n    ready: function() {\n\n      // GET request\n      this.$http.get('/someUrl', function (data, status, request) {\n\n          // set data on vm\n          this.$set('someData', data)\n\n      }).error(function (data, status, request) {\n          // handle error\n      })\n\n    }\n\n})\n```\n\n## Resource\n\nThe resource service can be used globally `Vue.resource` or in a Vue instance `this.$resource`.\n\n### Methods\n\n* `resource(url, [params], [actions], [options])`\n\n### Default Actions\n\n```javascript\nget: {method: 'GET'},\nsave: {method: 'POST'},\nquery: {method: 'GET'},\nupdate: {method: 'PUT'},\nremove: {method: 'DELETE'},\ndelete: {method: 'DELETE'}\n```\n\n### Example\n```javascript\nnew Vue({\n\n    ready: function() {\n\n      var resource = this.$resource('someItem/:id');\n\n      // get item\n      resource.get({id: 1}, function (item, status, request) {\n          this.$set('item', item)\n      })\n\n      // save item\n      resource.save({id: 1}, {item: this.item}, function (data, status, request) {\n          // handle success\n      }).error(function (data, status, request) {\n          // handle error\n      })\n\n      // delete item\n      resource.delete({id: 1}, function (data, status, request) {\n          // handle success\n      }).error(function (data, status, request) {\n          // handle error\n      })\n\n    }\n\n})\n```\n",
  "readmeFilename": "README.md",
  "_id": "vue-resource@0.1.17",
  "dist": {
    "shasum": "ff13598f222859cca237164f0a9b1a5a62aa05e4"
  },
  "_from": "vue-resource@^0.1.17",
  "_resolved": "https://registry.npmjs.org/vue-resource/-/vue-resource-0.1.17.tgz"
}
